  
  
ABBV_ORDINAL_MAP = {  
"1st": 1,"2nd": 2,"3rd": 3,"4th": 4,"5th": 5,"6th": 6,"7th": 7,"8th": 8,"9th": 9,
"10th": 10,"11th": 11,"12th": 12,"13th": 13,"14th": 14,"15th": 15,"16th": 16,"17th": 17,"18th": 18,"19th": 19,
"20th": 20,"21st": 21,"22nd": 22,"23rd": 23,"24th": 24,"25th": 25,"26th": 26,"27th": 27,"28th": 28,"29th": 29,
"30th": 30,"31st": 31,"32nd": 32,"33rd": 33,"34th": 34,"35th": 35,"36th": 36,"37th": 37,"38th": 38,"39th": 39,
"40th": 40,"41st": 41,"42nd": 42,"43rd": 43,"44th": 44,"45th": 45,"46th": 46,"47th": 47,"48th": 48,"49th": 49,
"50th": 50,"51st": 51,"52nd": 52,"53rd": 53,"54th": 54,"55th": 55,"56th": 56,"57th": 57,"58th": 58,"59th": 59,
"60th": 60,"61st": 61,"62nd": 62,"63rd": 63,"64th": 64,"65th": 65,"66th": 66,"67th": 67,"68th": 68,"69th": 69,
"70th": 70,"71st": 71,"72nd": 72,"73rd": 73,"74th": 74,"75th": 75,"76th": 76,"77th": 77,"78th": 78,"79th": 79,
"80th": 80,"81st": 81,"82nd": 82,"83rd": 83,"84th": 84,"85th": 85,"86th": 86,"87th": 87,"88th": 88,"89th": 89,
"90th": 90,"91st": 91,"92nd": 92,"93rd": 93,"94th": 94,"95th": 95,"96th": 96,"97th": 97,"98th": 98,"99th": 99,
"100th": 100
}

# Now create a regex to match any of the keys.
$AbbvOrdTerm = CreateRegex(Keys(ABBV_ORDINAL_MAP))


############### BIRTHDAYS ###############
BirthdaySocialEvent = { type: "CLASS", value: "benblamey.saesneg.model.annotations.socialevents.BirthdaySocialEventAnnotation" }

# Remember - regexes are case sensitive!
# It doesn't seem to be possible to bind to groups inside tokens - binding groups are intra-tokens.
# $X refers to the xth intra-token group.
# For Birthdays ctor - first param is age, subs. params are birthday owners.
  
{ ( /[A-Za-z]+'s/ /$AbbvOrdTerm/ /birthday|bday/? ) 
                    => BirthdaySocialEvent(ABBV_ORDINAL_MAP[$0[1].word], $0[0].word) }
                        { ( /$AbbvOrdTerm/ /birthday|bday/ ) 
                    => BirthdaySocialEvent(ABBV_ORDINAL_MAP[$0[0].word]) }
{ ( /[a-zA-Z]+'s/ /birthday|bday/ ) 
                => BirthdaySocialEvent(-1, $0[0].word) }
{ ( /Birthday/ ) => BirthdaySocialEvent() }
{ ( /my/ /$AbbvOrdTerm/ /(birthday|bday).*/? ) 
                => BirthdaySocialEvent(ABBV_ORDINAL_MAP[$0[1].word], "WHO_OBJECT_CREATOR") }
{ (  /my/ /($AbbvOrdTerm)/ ) => BirthdaySocialEvent(ABBV_ORDINAL_MAP[$1[1].word], "WHO_OBJECT_CREATOR") }

############### WEDDINGS ###############
WeddingSocialEvent = { type: "CLASS", value: "benblamey.saesneg.model.annotations.socialevents.WeddingSocialEventAnnotation" }
{ ( /[A-Za-z]+/ /and/ /[A-Za-z]+'s/ /wedding/ ) 
			=> WeddingSocialEvent($0[0].word, $0[2].word) }
{ ( /[A-Za-z]+/ /(and|\+|\&)/ /[A-Za-z]+'s/ /wedding/ ) 
			=> WeddingSocialEvent($0[0].word, $0[2].word) }
{ ( /wedding/ /of/ /[A-Za-z]+/ /(and|\+|\&)/ /[A-Za-z]+/ ) 
			=> WeddingSocialEvent($0[2].word, $0[4].word) }
{ ( /wedding/ /ceremony/ /of/ /[A-Za-z]+/ /(and|\+|\&)/ /[A-Za-z]+/ ) 
			=> WeddingSocialEvent($0[3].word, $0[5].word) }
{ ( /[A-Za-z]+'s/ /wedding/ /ceremony/? ) 
			=> WeddingSocialEvent($0[0].word) }			